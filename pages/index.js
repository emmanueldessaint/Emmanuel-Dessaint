import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'

export default function Home() {

  const [player, setPlayer] = useState(1);
  const [victory, setVictory] = useState('');
  const [cases, setCases] = useState([
    ['', '', ''],
    ['', '', ''],
    ['', '', '']
  ]);

  const play = (index, subindex) => {
    let test = [...cases];
    if (test[index][subindex] === '') {
      test[index][subindex] = player === 1 ? 'O' : 'X';
      setCases(test);
      player === 1 ? setPlayer(2) : setPlayer(1);
    }
  }

  useEffect(() => {
    var player1 = [];
    var player2 = 0;
    for (var i = 0; i < cases.length; i++) {
      for (var j = 0; j < cases[i].length; j++) {
        if (cases[i][j] === 'O') {
          player1.push(i, j);
        }
      }
    }
    console.log(player1)
  }, [cases])

  const restart = () => {
    // setPlayer(1);
    // setCases([
    //   ['', '', ''],
    //   ['', '', ''],
    //   ['', '', '']
    // ]);


    // var startTime = performance.now()
    // let a = 0;
    // for (var i = 0; i < 20000; i++) {
    //   a += (1+2*5/10)
    // }   
    // var endTime = performance.now()
    // console.log(`Call to doSomething took ${endTime - startTime} milliseconds`)

    var arr = new Array(100000).fill(Math.random());
    function testingFor(arr) {
      console.time('for');
      var res = [];
      for (let i = 0; i < arr.length; i++) {
        res.push(arr[i]);
      }
      console.timeEnd('for')
      return res;
    }
    testingFor(arr);

  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {player === 1 ?
        <div>Joueur 1 : O</div> :
        <div>Joueur 2 : X</div>
      }
      <div className="flex">
        {cases.map((item, index) => (
          <div key={index}>
            {item.map((subitem, subindex) => (
              <div key={index + subindex}
                className={cases[index][subindex] === '' ? 'oneCase' : 'oneCase notavailable'}
                onClick={() => play(index, subindex)}>
                {cases[index][subindex]}
              </div>
            ))}
          </div>
        ))}
      </div>
      <div>
        <button onClick={() => restart()}>recommencer</button>
      </div>
      <div>
        {victory}
      </div>
      <style jsx>{`
        .flex{
            display: flex;
            font-size: 1.5em;
        }
        .oneCase{
          width:100px;
          height:100px;
          border: 1px solid black;
          text-align: center;
          padding-top:30px;
        }
        .notavailable{
          background-color: rgba(0,0,0,0.1);
        }
        `}
      </style>
    </div>
  )
}
